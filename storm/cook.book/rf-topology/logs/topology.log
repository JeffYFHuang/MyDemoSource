2016-11-04 11:39:26,961 ERROR storm.util (NO_SOURCE_FILE:invoke(0)) - Async loop died!
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at scala.collection.immutable.StringLike$class.toInt(StringLike.scala:231)
	at scala.collection.immutable.StringOps.toInt(StringOps.scala:31)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1$$anonfun$5.apply(ZKBrokerPartitionInfo.scala:167)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1$$anonfun$5.apply(ZKBrokerPartitionInfo.scala:167)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)
	at scala.collection.Iterator$class.foreach(Iterator.scala:772)
	at scala.collection.JavaConversions$JIteratorWrapper.foreach(JavaConversions.scala:573)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.collection.JavaConversions$JListWrapper.foreach(JavaConversions.scala:615)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:233)
	at scala.collection.JavaConversions$JListWrapper.map(JavaConversions.scala:615)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1.apply(ZKBrokerPartitionInfo.scala:167)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1.apply(ZKBrokerPartitionInfo.scala:163)
	at scala.collection.Iterator$class.foreach(Iterator.scala:772)
	at scala.collection.JavaConversions$JIteratorWrapper.foreach(JavaConversions.scala:573)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.collection.JavaConversions$JListWrapper.foreach(JavaConversions.scala:615)
	at kafka.producer.ZKBrokerPartitionInfo.kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo(ZKBrokerPartitionInfo.scala:163)
	at kafka.producer.ZKBrokerPartitionInfo.<init>(ZKBrokerPartitionInfo.scala:65)
	at kafka.producer.Producer.<init>(Producer.scala:47)
	at kafka.javaapi.producer.Producer.<init>(Producer.scala:33)
	at kafka.javaapi.producer.Producer.<init>(Producer.scala:40)
	at com.github.quintona.KafkaState.<init>(KafkaState.java:75)
	at com.github.quintona.KafkaState$Factory.makeState(KafkaState.java:57)
	at storm.trident.planner.SubtopologyBolt.prepare(SubtopologyBolt.java:52)
	at storm.trident.topology.TridentBoltExecutor.prepare(TridentBoltExecutor.java:214)
	at backtype.storm.daemon.executor$fn__3557$fn__3569.invoke(executor.clj:659)
	at backtype.storm.util$async_loop$fn__436.invoke(util.clj:375)
	at clojure.lang.AFn.run(AFn.java:24)
	at java.lang.Thread.run(Thread.java:745)
2016-11-04 11:39:27,002 ERROR daemon.executor (NO_SOURCE_FILE:invoke(0)) - 
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at scala.collection.immutable.StringLike$class.toInt(StringLike.scala:231)
	at scala.collection.immutable.StringOps.toInt(StringOps.scala:31)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1$$anonfun$5.apply(ZKBrokerPartitionInfo.scala:167)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1$$anonfun$5.apply(ZKBrokerPartitionInfo.scala:167)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)
	at scala.collection.Iterator$class.foreach(Iterator.scala:772)
	at scala.collection.JavaConversions$JIteratorWrapper.foreach(JavaConversions.scala:573)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.collection.JavaConversions$JListWrapper.foreach(JavaConversions.scala:615)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:233)
	at scala.collection.JavaConversions$JListWrapper.map(JavaConversions.scala:615)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1.apply(ZKBrokerPartitionInfo.scala:167)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1.apply(ZKBrokerPartitionInfo.scala:163)
	at scala.collection.Iterator$class.foreach(Iterator.scala:772)
	at scala.collection.JavaConversions$JIteratorWrapper.foreach(JavaConversions.scala:573)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.collection.JavaConversions$JListWrapper.foreach(JavaConversions.scala:615)
	at kafka.producer.ZKBrokerPartitionInfo.kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo(ZKBrokerPartitionInfo.scala:163)
	at kafka.producer.ZKBrokerPartitionInfo.<init>(ZKBrokerPartitionInfo.scala:65)
	at kafka.producer.Producer.<init>(Producer.scala:47)
	at kafka.javaapi.producer.Producer.<init>(Producer.scala:33)
	at kafka.javaapi.producer.Producer.<init>(Producer.scala:40)
	at com.github.quintona.KafkaState.<init>(KafkaState.java:75)
	at com.github.quintona.KafkaState$Factory.makeState(KafkaState.java:57)
	at storm.trident.planner.SubtopologyBolt.prepare(SubtopologyBolt.java:52)
	at storm.trident.topology.TridentBoltExecutor.prepare(TridentBoltExecutor.java:214)
	at backtype.storm.daemon.executor$fn__3557$fn__3569.invoke(executor.clj:659)
	at backtype.storm.util$async_loop$fn__436.invoke(util.clj:375)
	at clojure.lang.AFn.run(AFn.java:24)
	at java.lang.Thread.run(Thread.java:745)
2016-11-04 11:39:27,039 ERROR storm.util (NO_SOURCE_FILE:invoke(0)) - Async loop died!
java.lang.RuntimeException: java.net.ConnectException: Connection refused
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:87)
	at backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:58)
	at backtype.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:62)
	at backtype.storm.daemon.executor$fn__3557$fn__3569$fn__3616.invoke(executor.clj:715)
	at backtype.storm.util$async_loop$fn__436.invoke(util.clj:377)
	at clojure.lang.AFn.run(AFn.java:24)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused
	at sun.nio.ch.Net.connect0(Native Method)
	at sun.nio.ch.Net.connect(Net.java:484)
	at sun.nio.ch.Net.connect(Net.java:476)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:675)
	at kafka.consumer.SimpleConsumer.connect(SimpleConsumer.scala:49)
	at kafka.consumer.SimpleConsumer.getOrMakeConnection(SimpleConsumer.scala:186)
	at kafka.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:149)
	at kafka.javaapi.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:66)
	at storm.kafka.trident.KafkaUtils.emitPartitionBatchNew(KafkaUtils.java:69)
	at storm.kafka.trident.TransactionalTridentKafkaSpout$Emitter.emitPartitionBatchNew(TransactionalTridentKafkaSpout.java:81)
	at storm.kafka.trident.TransactionalTridentKafkaSpout$Emitter.emitPartitionBatchNew(TransactionalTridentKafkaSpout.java:60)
	at storm.trident.spout.PartitionedTridentSpoutExecutor$Emitter$1.init(PartitionedTridentSpoutExecutor.java:108)
	at storm.trident.topology.state.RotatingTransactionalState.getState(RotatingTransactionalState.java:63)
	at storm.trident.topology.state.RotatingTransactionalState.getStateOrCreate(RotatingTransactionalState.java:90)
	at storm.trident.spout.PartitionedTridentSpoutExecutor$Emitter.emitBatch(PartitionedTridentSpoutExecutor.java:104)
	at storm.trident.spout.TridentSpoutExecutor.execute(TridentSpoutExecutor.java:65)
	at storm.trident.topology.TridentBoltExecutor.execute(TridentBoltExecutor.java:352)
	at backtype.storm.daemon.executor$fn__3557$tuple_action_fn__3559.invoke(executor.clj:610)
	at backtype.storm.daemon.executor$mk_task_receiver$fn__3480.invoke(executor.clj:382)
	at backtype.storm.disruptor$clojure_handler$reify__3017.onEvent(disruptor.clj:43)
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:84)
	... 6 more
2016-11-04 11:39:27,044 ERROR daemon.executor (NO_SOURCE_FILE:invoke(0)) - 
java.lang.RuntimeException: java.net.ConnectException: Connection refused
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:87)
	at backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:58)
	at backtype.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:62)
	at backtype.storm.daemon.executor$fn__3557$fn__3569$fn__3616.invoke(executor.clj:715)
	at backtype.storm.util$async_loop$fn__436.invoke(util.clj:377)
	at clojure.lang.AFn.run(AFn.java:24)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused
	at sun.nio.ch.Net.connect0(Native Method)
	at sun.nio.ch.Net.connect(Net.java:484)
	at sun.nio.ch.Net.connect(Net.java:476)
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:675)
	at kafka.consumer.SimpleConsumer.connect(SimpleConsumer.scala:49)
	at kafka.consumer.SimpleConsumer.getOrMakeConnection(SimpleConsumer.scala:186)
	at kafka.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:149)
	at kafka.javaapi.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:66)
	at storm.kafka.trident.KafkaUtils.emitPartitionBatchNew(KafkaUtils.java:69)
	at storm.kafka.trident.TransactionalTridentKafkaSpout$Emitter.emitPartitionBatchNew(TransactionalTridentKafkaSpout.java:81)
	at storm.kafka.trident.TransactionalTridentKafkaSpout$Emitter.emitPartitionBatchNew(TransactionalTridentKafkaSpout.java:60)
	at storm.trident.spout.PartitionedTridentSpoutExecutor$Emitter$1.init(PartitionedTridentSpoutExecutor.java:108)
	at storm.trident.topology.state.RotatingTransactionalState.getState(RotatingTransactionalState.java:63)
	at storm.trident.topology.state.RotatingTransactionalState.getStateOrCreate(RotatingTransactionalState.java:90)
	at storm.trident.spout.PartitionedTridentSpoutExecutor$Emitter.emitBatch(PartitionedTridentSpoutExecutor.java:104)
	at storm.trident.spout.TridentSpoutExecutor.execute(TridentSpoutExecutor.java:65)
	at storm.trident.topology.TridentBoltExecutor.execute(TridentBoltExecutor.java:352)
	at backtype.storm.daemon.executor$fn__3557$tuple_action_fn__3559.invoke(executor.clj:610)
	at backtype.storm.daemon.executor$mk_task_receiver$fn__3480.invoke(executor.clj:382)
	at backtype.storm.disruptor$clojure_handler$reify__3017.onEvent(disruptor.clj:43)
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:84)
	... 6 more
2016-11-04 11:42:01,710 WARN  server.NIOServerCnxn (NIOServerCnxn.java:doIO(634)) - EndOfStreamException: Unable to read additional data from client sessionid 0x1582d6dcfc70002, likely client has closed socket
2016-11-04 11:42:03,801 ERROR storm.util (NO_SOURCE_FILE:invoke(0)) - Async loop died!
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at scala.collection.immutable.StringLike$class.toInt(StringLike.scala:231)
	at scala.collection.immutable.StringOps.toInt(StringOps.scala:31)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1$$anonfun$5.apply(ZKBrokerPartitionInfo.scala:167)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1$$anonfun$5.apply(ZKBrokerPartitionInfo.scala:167)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)
	at scala.collection.Iterator$class.foreach(Iterator.scala:772)
	at scala.collection.JavaConversions$JIteratorWrapper.foreach(JavaConversions.scala:573)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.collection.JavaConversions$JListWrapper.foreach(JavaConversions.scala:615)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:233)
	at scala.collection.JavaConversions$JListWrapper.map(JavaConversions.scala:615)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1.apply(ZKBrokerPartitionInfo.scala:167)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1.apply(ZKBrokerPartitionInfo.scala:163)
	at scala.collection.Iterator$class.foreach(Iterator.scala:772)
	at scala.collection.JavaConversions$JIteratorWrapper.foreach(JavaConversions.scala:573)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.collection.JavaConversions$JListWrapper.foreach(JavaConversions.scala:615)
	at kafka.producer.ZKBrokerPartitionInfo.kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo(ZKBrokerPartitionInfo.scala:163)
	at kafka.producer.ZKBrokerPartitionInfo.<init>(ZKBrokerPartitionInfo.scala:65)
	at kafka.producer.Producer.<init>(Producer.scala:47)
	at kafka.javaapi.producer.Producer.<init>(Producer.scala:33)
	at kafka.javaapi.producer.Producer.<init>(Producer.scala:40)
	at com.github.quintona.KafkaState.<init>(KafkaState.java:75)
	at com.github.quintona.KafkaState$Factory.makeState(KafkaState.java:57)
	at storm.trident.planner.SubtopologyBolt.prepare(SubtopologyBolt.java:52)
	at storm.trident.topology.TridentBoltExecutor.prepare(TridentBoltExecutor.java:214)
	at backtype.storm.daemon.executor$fn__3557$fn__3569.invoke(executor.clj:659)
	at backtype.storm.util$async_loop$fn__436.invoke(util.clj:375)
	at clojure.lang.AFn.run(AFn.java:24)
	at java.lang.Thread.run(Thread.java:745)
2016-11-04 11:42:03,818 ERROR daemon.executor (NO_SOURCE_FILE:invoke(0)) - 
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at scala.collection.immutable.StringLike$class.toInt(StringLike.scala:231)
	at scala.collection.immutable.StringOps.toInt(StringOps.scala:31)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1$$anonfun$5.apply(ZKBrokerPartitionInfo.scala:167)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1$$anonfun$5.apply(ZKBrokerPartitionInfo.scala:167)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233)
	at scala.collection.Iterator$class.foreach(Iterator.scala:772)
	at scala.collection.JavaConversions$JIteratorWrapper.foreach(JavaConversions.scala:573)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.collection.JavaConversions$JListWrapper.foreach(JavaConversions.scala:615)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:233)
	at scala.collection.JavaConversions$JListWrapper.map(JavaConversions.scala:615)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1.apply(ZKBrokerPartitionInfo.scala:167)
	at kafka.producer.ZKBrokerPartitionInfo$$anonfun$kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo$1.apply(ZKBrokerPartitionInfo.scala:163)
	at scala.collection.Iterator$class.foreach(Iterator.scala:772)
	at scala.collection.JavaConversions$JIteratorWrapper.foreach(JavaConversions.scala:573)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.collection.JavaConversions$JListWrapper.foreach(JavaConversions.scala:615)
	at kafka.producer.ZKBrokerPartitionInfo.kafka$producer$ZKBrokerPartitionInfo$$getZKTopicPartitionInfo(ZKBrokerPartitionInfo.scala:163)
	at kafka.producer.ZKBrokerPartitionInfo.<init>(ZKBrokerPartitionInfo.scala:65)
	at kafka.producer.Producer.<init>(Producer.scala:47)
	at kafka.javaapi.producer.Producer.<init>(Producer.scala:33)
	at kafka.javaapi.producer.Producer.<init>(Producer.scala:40)
	at com.github.quintona.KafkaState.<init>(KafkaState.java:75)
	at com.github.quintona.KafkaState$Factory.makeState(KafkaState.java:57)
	at storm.trident.planner.SubtopologyBolt.prepare(SubtopologyBolt.java:52)
	at storm.trident.topology.TridentBoltExecutor.prepare(TridentBoltExecutor.java:214)
	at backtype.storm.daemon.executor$fn__3557$fn__3569.invoke(executor.clj:659)
	at backtype.storm.util$async_loop$fn__436.invoke(util.clj:375)
	at clojure.lang.AFn.run(AFn.java:24)
	at java.lang.Thread.run(Thread.java:745)
2016-11-04 11:42:03,898 ERROR storm.util (NO_SOURCE_FILE:invoke(0)) - Async loop died!
java.lang.RuntimeException: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:87)
	at backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:58)
	at backtype.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:62)
	at backtype.storm.daemon.executor$fn__3557$fn__3569$fn__3616.invoke(executor.clj:715)
	at backtype.storm.util$async_loop$fn__436.invoke(util.clj:377)
	at clojure.lang.AFn.run(AFn.java:24)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:539)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:55)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.consumer.SimpleConsumer.getResponse(SimpleConsumer.scala:177)
	at kafka.consumer.SimpleConsumer.liftedTree3$1(SimpleConsumer.scala:161)
	at kafka.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:151)
	at kafka.javaapi.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:66)
	at storm.kafka.trident.KafkaUtils.emitPartitionBatchNew(KafkaUtils.java:69)
	at storm.kafka.trident.TransactionalTridentKafkaSpout$Emitter.emitPartitionBatchNew(TransactionalTridentKafkaSpout.java:81)
	at storm.kafka.trident.TransactionalTridentKafkaSpout$Emitter.emitPartitionBatchNew(TransactionalTridentKafkaSpout.java:60)
	at storm.trident.spout.PartitionedTridentSpoutExecutor$Emitter$1.init(PartitionedTridentSpoutExecutor.java:108)
	at storm.trident.topology.state.RotatingTransactionalState.getState(RotatingTransactionalState.java:63)
	at storm.trident.topology.state.RotatingTransactionalState.getStateOrCreate(RotatingTransactionalState.java:90)
	at storm.trident.spout.PartitionedTridentSpoutExecutor$Emitter.emitBatch(PartitionedTridentSpoutExecutor.java:104)
	at storm.trident.spout.TridentSpoutExecutor.execute(TridentSpoutExecutor.java:65)
	at storm.trident.topology.TridentBoltExecutor.execute(TridentBoltExecutor.java:352)
	at backtype.storm.daemon.executor$fn__3557$tuple_action_fn__3559.invoke(executor.clj:610)
	at backtype.storm.daemon.executor$mk_task_receiver$fn__3480.invoke(executor.clj:382)
	at backtype.storm.disruptor$clojure_handler$reify__3017.onEvent(disruptor.clj:43)
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:84)
	... 6 more
2016-11-04 11:42:03,902 ERROR daemon.executor (NO_SOURCE_FILE:invoke(0)) - 
java.lang.RuntimeException: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:87)
	at backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:58)
	at backtype.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:62)
	at backtype.storm.daemon.executor$fn__3557$fn__3569$fn__3616.invoke(executor.clj:715)
	at backtype.storm.util$async_loop$fn__436.invoke(util.clj:377)
	at clojure.lang.AFn.run(AFn.java:24)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:539)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:55)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.consumer.SimpleConsumer.getResponse(SimpleConsumer.scala:177)
	at kafka.consumer.SimpleConsumer.liftedTree3$1(SimpleConsumer.scala:161)
	at kafka.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:151)
	at kafka.javaapi.consumer.SimpleConsumer.getOffsetsBefore(SimpleConsumer.scala:66)
	at storm.kafka.trident.KafkaUtils.emitPartitionBatchNew(KafkaUtils.java:69)
	at storm.kafka.trident.TransactionalTridentKafkaSpout$Emitter.emitPartitionBatchNew(TransactionalTridentKafkaSpout.java:81)
	at storm.kafka.trident.TransactionalTridentKafkaSpout$Emitter.emitPartitionBatchNew(TransactionalTridentKafkaSpout.java:60)
	at storm.trident.spout.PartitionedTridentSpoutExecutor$Emitter$1.init(PartitionedTridentSpoutExecutor.java:108)
	at storm.trident.topology.state.RotatingTransactionalState.getState(RotatingTransactionalState.java:63)
	at storm.trident.topology.state.RotatingTransactionalState.getStateOrCreate(RotatingTransactionalState.java:90)
	at storm.trident.spout.PartitionedTridentSpoutExecutor$Emitter.emitBatch(PartitionedTridentSpoutExecutor.java:104)
	at storm.trident.spout.TridentSpoutExecutor.execute(TridentSpoutExecutor.java:65)
	at storm.trident.topology.TridentBoltExecutor.execute(TridentBoltExecutor.java:352)
	at backtype.storm.daemon.executor$fn__3557$tuple_action_fn__3559.invoke(executor.clj:610)
	at backtype.storm.daemon.executor$mk_task_receiver$fn__3480.invoke(executor.clj:382)
	at backtype.storm.disruptor$clojure_handler$reify__3017.onEvent(disruptor.clj:43)
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:84)
	... 6 more
